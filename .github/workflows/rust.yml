name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build linux and test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Install packages (Linux)
        run: |
          sudo apt-get update
          sudo apt-get -yq --no-install-suggests --no-install-recommends install libx11-dev libxi-dev libgl1-mesa-dev libasound2-dev
      - name: cargo build
        run: cargo build --target=x86_64-unknown-linux-gnu --release
      - name: cargo test
        run: cargo test --target=x86_64-unknown-linux-gnu
          
  wasmbuild:
    name: Build wasm and deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Install packages and target
        run: |
          sudo apt-get update
          sudo apt-get -yq --no-install-suggests --no-install-recommends install libx11-dev libxi-dev libgl1-mesa-dev libasound2-dev
          rustup target add wasm32-unknown-unknown
      - name: Cargo build
        run: cargo build --target=wasm32-unknown-unknown --release
      - name: copy to deploy dir
        run: |
          mkdir -p public/assets
          cp target/wasm32-unknown-unknown/release/yinsh.wasm public
          cp src/www/* public
          cp -r assets/* public/assets
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

